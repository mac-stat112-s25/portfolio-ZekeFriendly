[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "\n1  Univariate Viz\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nlibrary(viridis)\n\n#loading the data\nmovies &lt;- read.csv(\"movie_profit.csv\")\n\n#How much do movies make?\nggplot(movies, aes(x = production_budget/1000000)) +\n  geom_density(fill = viridis(1), alpha = 0.5) +\n  labs(x = \"Production Budget in Millions\", y = \"Density\", title = \"Distribution of Movie Production Budgets\", caption = \"Data from the-numbers.com\", alt = \"Movie budgets peak at around 10 million dolars with a sharp decline, however there are a consitant percent of movies with budgets over 150 million.\") +\n  theme_bw()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "\n2  Bivariate Viz\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nlibrary(viridis)\n\n#loading the data\nmovies &lt;- read.csv(\"movie_profit.csv\")\n#Turing a numerical variable (domestic gross) into a categorical variable for better analysis\nbreakpoints &lt;- c(-1, 10000000, 20000000, 100000000, Inf)\nmovies &lt;- movies %&gt;% \n  mutate(domestic_gross_cat = cut(domestic_gross, breaks = breakpoints, labels = c(\"0-10\", \"10-20\", \"20-100\", \"100+\")))\n\nggplot(movies, aes(x = genre, fill = domestic_gross_cat)) +\n  geom_bar(position = \"fill\", color = \"white\") +\n  scale_fill_manual(\"Domestic Gross in Millions\", values = viridis(4)) +\n  labs(x = \"Movie Genre\", y = \"Percent\", title = \"Proportion of Domestic Gross by Genre\", caption = \"Data from the-numbers.com\", alt = \"Adventure movies have the highest proportion of movies that gross over 100 million, while drama has the highest proportion of movies that gross under 10 million.\") +\n  theme_bw()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "\n3  Trivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\nlibrary(viridis)\n\n#loading the data\nmovies &lt;- read.csv(\"movie_profit.csv\")\n\n#Turing a numerical variable (domestic gross) into a categorical variable for better analysis\nbreakpoints &lt;- c(-1, 10000000, 20000000, 100000000, Inf)\nmovies &lt;- movies %&gt;% \n  mutate(domestic_gross_cat = cut(domestic_gross, breaks = breakpoints, labels = c(\"0-10\", \"10-20\", \"20-100\", \"100+\")))\n\nggplot(movies, aes(x = production_budget/1000000, y = worldwide_gross/1000000, color = genre)) +\n  geom_point(alpha = 0.7) +\n  scale_color_manual(\"Genre\", values = viridis(5)) +\n  labs(x = \"Production Budget in Millions\", y = \"Worldwide Gross in Millions\", title = \"Worldwide Gross by Production Budget and Genre\", caption = \"Data from the-numbers.com\", alt = \"Higher budgets correlate to higher worldwide gross. Horror and Drama movies have lowest budgets and the lowest worldwide gross. While Action and Adventure movies have the highest of both.\") +\n  theme_bw()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "\n4  Quadvariate Viz\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nlibrary(viridis)\n\n#loading the data\nmovies &lt;- read.csv(\"movie_profit.csv\")\n\n#Turing a numerical variable (domestic gross) into a categorical variable for better analysis\nbreakpoints &lt;- c(-1, 10000000, 20000000, 100000000, Inf)\nmovies &lt;- movies %&gt;% \n  mutate(domestic_gross_cat = cut(domestic_gross, breaks = breakpoints, labels = c(\"0-10\", \"10-20\", \"20-100\", \"100+\")))\n\n#reformatting the date to focus on the year for easier analysis\nmovies &lt;- movies %&gt;%\n  mutate(date_vector = as.Date(release_date, format = \"%m/%d/%Y\"), \n         year_group = format(date_vector, \"%Y\"))\n\nggplot(movies, aes(x = date_vector, y = production_budget/1000000, color = genre)) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(~domestic_gross_cat, labeller = labeller(domestic_gross_cat = c(\"0-10\" = \"Under 10M Domestic\", \"10-20\" = \"10-20M Domestic\", \"20-100\" = \"20-100M Domestic\", \"100+\" = \"Over 100M Domestic\"))) +\n  scale_color_manual(\"Genre\", values = viridis(5)) +\n  labs(x = \"Release Date\", y = \"Production Budget in Millions\", title = \"Production Budget by Release Date, Domestic Gross and Genre\", caption = \"Data from the-numbers.com\", alt = \"Later release dates apear to corellate with higher production budgets. Additionally higher production budgets correlate with high domestic gross. The highest production bidgets and highest grossing movies apear to be action movies realased after 2000.\") +\n  theme_bw()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "\n5  Spatial Viz\n",
    "section": "",
    "text": "Codelibrary(socviz)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(mosaic)\nlibrary(viridis)\n\ndata(county_map) \n\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_rent)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal() +\n  labs(title = \"American Median Rent by County\", caption = \"Data from the mac-stat program\", alt = \"East and west coast counties tend to have much higher median rents than middle America, especially in California and Newyork.\") +\n  scale_fill_viridis(\"Median Rent\", option = \"B\", direction =  -1)",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "bw/solo-project.html",
    "href": "bw/solo-project.html",
    "title": "\n6  solo-porject\n",
    "section": "",
    "text": "Codelibrary(tidyverse)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(mosaic)\n\nthailand &lt;- read.csv('Thailand_Rainfall_Data.csv')\n\nthailand_shape &lt;- ne_states(country = \"thailand\") |&gt; \n  select(name, geometry)\n\nfinal_thailand &lt;- thailand |&gt; \n  left_join(thailand_shape, join_by(name == name))\n\nggplot(thailand_shape) + \n  geom_sf(aes(fill = final_thailand$X1991.07)) +\n  scale_fill_viridis_c(\"Average Annual Percipitation (mm)\", direction = -1) + \n  labs(x = \"Latitude\", y = \"Longitude\", title = \"Precipitation Thailand 1901-2007\", caption = \"Data from the World Bank Group\", alt = \"Thailand has a large amount of precipitation especially in the center of the country\") +\n  theme_bw()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>solo-porject</span>"
    ]
  },
  {
    "objectID": "bw/Exam-1.html",
    "href": "bw/Exam-1.html",
    "title": "\n7  Exam-1\n",
    "section": "",
    "text": "7.1 Loading Data\nCodelibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(rnaturalearth)\nlibrary(mosaic)\n\ntuesdata &lt;- tt_load('2020-02-18')\nfc &lt;- tuesdata$food_consumption",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Exam-1</span>"
    ]
  },
  {
    "objectID": "bw/Exam-1.html#data-exploration",
    "href": "bw/Exam-1.html#data-exploration",
    "title": "\n7  Exam-1\n",
    "section": "\n7.2 Data Exploration",
    "text": "7.2 Data Exploration\n\nCodehead(fc)\n\n# A tibble: 6 × 4\n  country   food_category consumption co2_emmission\n  &lt;chr&gt;     &lt;chr&gt;               &lt;dbl&gt;         &lt;dbl&gt;\n1 Argentina Pork                10.5          37.2 \n2 Argentina Poultry             38.7          41.5 \n3 Argentina Beef                55.5        1712   \n4 Argentina Lamb & Goat          1.56         54.6 \n5 Argentina Fish                 4.36          6.96\n6 Argentina Eggs                11.4          10.5 \n\nCodetail(fc)\n\n# A tibble: 6 × 4\n  country    food_category            consumption co2_emmission\n  &lt;chr&gt;      &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;\n1 Bangladesh Eggs                            2.08          1.91\n2 Bangladesh Milk - inc. cheese             21.9          31.2 \n3 Bangladesh Wheat and Wheat Products       17.5           3.33\n4 Bangladesh Rice                          172.          220.  \n5 Bangladesh Soybeans                        0.61          0.27\n6 Bangladesh Nuts inc. Peanut Butter         0.72          1.27\n\nCodedim(fc)\n\n[1] 1430    4",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Exam-1</span>"
    ]
  },
  {
    "objectID": "bw/Exam-1.html#understanding-variables",
    "href": "bw/Exam-1.html#understanding-variables",
    "title": "\n7  Exam-1\n",
    "section": "\n7.3 Understanding Variables",
    "text": "7.3 Understanding Variables\n\nCodeggplot(fc, aes(x = consumption, y = co2_emmission)) +\n  facet_wrap(~food_category)+\n  geom_smooth()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Exam-1</span>"
    ]
  },
  {
    "objectID": "bw/Exam-1.html#grand-rq",
    "href": "bw/Exam-1.html#grand-rq",
    "title": "\n7  Exam-1\n",
    "section": "\n7.4 Grand RQ",
    "text": "7.4 Grand RQ\n\nCodecountry_map &lt;- map_data(\"world\")\n\nggplot(fc, aes(map_id = country, fill = consumption)) +\n  geom_map(map = country_map) +\n  facet_wrap(~food_category) +\n  scale_fill_viridis_c(\"Consumption (kg/person/year\") +\n  expand_limits(x = country_map$long, y = country_map$lat) +\n  labs(title = \"Food Consumption Around the World\", caption = \"Data from the TidyTuesday\", alt = \"Western Countries tend to eat alot more milk and cheese than the rest of the world\") +\n  theme_map()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Exam-1</span>"
    ]
  },
  {
    "objectID": "bw/Exam-1.html#aditional-questions",
    "href": "bw/Exam-1.html#aditional-questions",
    "title": "\n7  Exam-1\n",
    "section": "\n7.5 Aditional Questions",
    "text": "7.5 Aditional Questions\nDo countries on the coast eat more fish?\nWhich foods produce the most CO2?",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Exam-1</span>"
    ]
  },
  {
    "objectID": "bw/Exam-2.html",
    "href": "bw/Exam-2.html",
    "title": "\n8  Exam-2\n",
    "section": "",
    "text": "Loading Data\nCodelibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(rnaturalearth)\nlibrary(sf)\nlibrary(stringr)\nlibrary(mosaic)\n\ntuesdata &lt;- tt_load('2020-02-18')\nfc &lt;- tuesdata$food_consumption",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Exam-2</span>"
    ]
  },
  {
    "objectID": "bw/Exam-2.html#data-exploration",
    "href": "bw/Exam-2.html#data-exploration",
    "title": "\n8  Exam-2\n",
    "section": "\n8.1 Data Exploration",
    "text": "8.1 Data Exploration\n\nCodestr(fc)\n\nspc_tbl_ [1,430 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ country      : chr [1:1430] \"Argentina\" \"Argentina\" \"Argentina\" \"Argentina\" ...\n $ food_category: chr [1:1430] \"Pork\" \"Poultry\" \"Beef\" \"Lamb & Goat\" ...\n $ consumption  : num [1:1430] 10.51 38.66 55.48 1.56 4.36 ...\n $ co2_emmission: num [1:1430] 37.2 41.53 1712 54.63 6.96 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   country = col_character(),\n  ..   food_category = col_character(),\n  ..   consumption = col_double(),\n  ..   co2_emmission = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nCodehead(fc, 22)\n\n# A tibble: 22 × 4\n   country   food_category            consumption co2_emmission\n   &lt;chr&gt;     &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;\n 1 Argentina Pork                           10.5          37.2 \n 2 Argentina Poultry                        38.7          41.5 \n 3 Argentina Beef                           55.5        1712   \n 4 Argentina Lamb & Goat                     1.56         54.6 \n 5 Argentina Fish                            4.36          6.96\n 6 Argentina Eggs                           11.4          10.5 \n 7 Argentina Milk - inc. cheese            195.          278.  \n 8 Argentina Wheat and Wheat Products      103.           19.7 \n 9 Argentina Rice                            8.77         11.2 \n10 Argentina Soybeans                        0             0   \n# ℹ 12 more rows\n\nCode#Examining food Category\nfc |&gt; \n  distinct(food_category)\n\n# A tibble: 11 × 1\n   food_category           \n   &lt;chr&gt;                   \n 1 Pork                    \n 2 Poultry                 \n 3 Beef                    \n 4 Lamb & Goat             \n 5 Fish                    \n 6 Eggs                    \n 7 Milk - inc. cheese      \n 8 Wheat and Wheat Products\n 9 Rice                    \n10 Soybeans                \n11 Nuts inc. Peanut Butter \n\nCode#Fixing Food category\nfc &lt;- fc |&gt; \n  mutate(food_category = str_replace(food_category, \"Lamb & Goat\", \"Lamb\")) |&gt; \n  mutate(food_category = str_replace(food_category, \"Milk - inc. cheese\", \"Dairy\")) |&gt; \n  mutate(food_category = str_replace(food_category, \"Wheat and Wheat Products\", \"Wheat\")) |&gt;\n  mutate(food_category = str_replace(food_category, \"Nuts inc. Peanut Butter\", \"Nuts\"))\n\n# Reinspect Food Category\nfc |&gt; \n  distinct(food_category)\n\n# A tibble: 11 × 1\n   food_category\n   &lt;chr&gt;        \n 1 Pork         \n 2 Poultry      \n 3 Beef         \n 4 Lamb         \n 5 Fish         \n 6 Eggs         \n 7 Dairy        \n 8 Wheat        \n 9 Rice         \n10 Soybeans     \n11 Nuts",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Exam-2</span>"
    ]
  },
  {
    "objectID": "bw/Exam-2.html#most-consuming-countries",
    "href": "bw/Exam-2.html#most-consuming-countries",
    "title": "\n8  Exam-2\n",
    "section": "\n8.2 Most Consuming Countries",
    "text": "8.2 Most Consuming Countries\n\nCode# most consuming countries\nfc |&gt; \n  group_by(country) |&gt; \n  summarise(consumption = sum(consumption)) |&gt; \n  arrange(desc(consumption)) |&gt; \n  slice_head(n = 5)\n\n# A tibble: 5 × 2\n  country     consumption\n  &lt;chr&gt;             &lt;dbl&gt;\n1 Finland            640.\n2 Lithuania          555.\n3 Sweden             550 \n4 Netherlands        534.\n5 Albania            533.\n\nCode# most consuming countries of each food\nfc |&gt; \n  group_by(food_category) |&gt; \n  slice_max(consumption, n = 5) |&gt; \n  select(food_category, consumption, country)\n\n# A tibble: 55 × 3\n# Groups:   food_category [11]\n   food_category consumption country    \n   &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      \n 1 Beef                 55.5 Argentina  \n 2 Beef                 39.2 Brazil     \n 3 Beef                 36.2 USA        \n 4 Beef                 33.9 Australia  \n 5 Beef                 33.2 Bermuda    \n 6 Dairy               431.  Finland    \n 7 Dairy               341.  Netherlands\n 8 Dairy               341.  Sweden     \n 9 Dairy               319.  Switzerland\n10 Dairy               304.  Albania    \n# ℹ 45 more rows",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Exam-2</span>"
    ]
  },
  {
    "objectID": "bw/Exam-2.html#food-consumption-maps",
    "href": "bw/Exam-2.html#food-consumption-maps",
    "title": "\n8  Exam-2\n",
    "section": "\n8.3 Food Consumption Maps",
    "text": "8.3 Food Consumption Maps\n\nCode# Attempt 1\nne_countries(returnclass = \"sf\") |&gt; \n  select(name, geometry) |&gt; \n  left_join(fc |&gt; select(-co2_emmission), join_by(name == country)) |&gt; \n  ggplot() +\n  geom_sf(aes(fill = consumption)) +\n  facet_wrap(~food_category) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\nCode# Attempt 2\nne_countries(returnclass = \"sf\") |&gt; \n  select(name, geometry) |&gt; \n  mutate(name = ifelse(name == \"United States of America\", \"USA\", name)) |&gt; \n  mutate(name = ifelse(name == \"Bosnia and Herz.\", \"Bosnia and Herzegovina\", name)) |&gt;\n  mutate(name = ifelse(name == \"Czechia\", \"Czech Republic\", name)) |&gt;\n  mutate(name = ifelse(name == \"Taiwan\", \"Taiwan. ROC\", name)) |&gt; \n  left_join(fc |&gt; select(-co2_emmission), join_by(name == country)) |&gt; \n  pivot_wider(names_from = food_category, values_from = consumption) |&gt; \n  select(-\"NA\") |&gt; \n  pivot_longer(cols = c(-name, -geometry), names_to = \"food_category\", values_to = 'consumption') |&gt; \n  ggplot() +\n  geom_sf(aes(fill = consumption)) +\n  facet_wrap(~food_category) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\nCode# Attempt 3\nne_countries(returnclass = \"sf\") |&gt; \n  select(name, geometry) |&gt; \n  mutate(name = ifelse(name == \"United States of America\", \"USA\", name)) |&gt; \n  mutate(name = ifelse(name == \"Bosnia and Herz.\", \"Bosnia and Herzegovina\", name)) |&gt;\n  mutate(name = ifelse(name == \"Czechia\", \"Czech Republic\", name)) |&gt;\n  mutate(name = ifelse(name == \"Taiwan\", \"Taiwan. ROC\", name)) |&gt; \n  left_join(fc |&gt; \n              select(-co2_emmission) |&gt;\n              group_by(food_category) |&gt; \n              mutate(consumption = (consumption - mean(consumption))/sd(consumption)),\n            join_by(name == country)) |&gt; \n  pivot_wider(names_from = food_category, values_from = consumption) |&gt; \n  select(-\"NA\") |&gt; \n  pivot_longer(cols = c(-name, -geometry), names_to = \"food_category\", values_to = 'consumption') |&gt; \n  ggplot() +\n  geom_sf(aes(fill = consumption)) +\n  facet_wrap(~food_category) +\n  labs(title = \"Food Consumption Around the World\", caption = \"Data from the TidyTuesday\", alt = \"Western Countries tend to eat alot more milk and cheese than the rest of the world\") +\n  scale_fill_viridis_c(\"Standardized Consumption\") +\n  theme(legend.position = \"bottom\")",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Exam-2</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html",
    "href": "ica/ica-uni.html",
    "title": "\n11  Univariate Viz\n",
    "section": "",
    "text": "11.1 Exercise 2: Load tidyverse\n# Load the package\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Use the ggplot function\nggplot(hikes, aes(x = rating))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-3-bar-chart-of-ratings---part-1",
    "href": "ica/ica-uni.html#exercise-3-bar-chart-of-ratings---part-1",
    "title": "\n11  Univariate Viz\n",
    "section": "\n11.2 Exercise 3: Bar Chart of Ratings - Part 1",
    "text": "11.2 Exercise 3: Bar Chart of Ratings - Part 1\n\nggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\nThink about:\nWhat did this do? What do you observe? What, in general, is the first argument of the ggplot() function? What is the purpose of writing x = rating? What do you think aes stands for?!?",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-4-bar-chart-of-ratings---part-2",
    "href": "ica/ica-uni.html#exercise-4-bar-chart-of-ratings---part-2",
    "title": "\n11  Univariate Viz\n",
    "section": "\n11.3 Exercise 4: Bar Chart of Ratings - Part 2",
    "text": "11.3 Exercise 4: Bar Chart of Ratings - Part 2\n\n# Added bars for the data to the graph\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n# Added x and y axis labels\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# Made the bars blue\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# Made the outline of the bars orange\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n# Changed the theme, making the backround white\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-5-bar-chart-follow-up",
    "href": "ica/ica-uni.html#exercise-5-bar-chart-follow-up",
    "title": "\n11  Univariate Viz\n",
    "section": "\n11.4 Exercise 5: Bar Chart Follow-up",
    "text": "11.4 Exercise 5: Bar Chart Follow-up",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-6-sad-bar-chart",
    "href": "ica/ica-uni.html#exercise-6-sad-bar-chart",
    "title": "\n11  Univariate Viz\n",
    "section": "\n14.1 Exercise 6: Sad Bar Chart",
    "text": "14.1 Exercise 6: Sad Bar Chart\n\nggplot(hikes, aes(x = elevation)) +\n  geom_bar()\n\n\n\n\n\n\n\nAmong the hikes, what’s the range of elevation and how are the hikes distributed within this range (e.g. evenly, in clumps, “normally”)?\n\nhard to answer\n\nWhat’s a typical elevation?\n\nhard to see\n\nAre there any outliers, i.e. hikes that have unusually high or low elevations?\n\nyes\n\nIts a bad way to tell the story!",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-7-a-histogram-of-elevation",
    "href": "ica/ica-uni.html#exercise-7-a-histogram-of-elevation",
    "title": "\n11  Univariate Viz\n",
    "section": "\n14.2 Exercise 7: A Histogram of Elevation",
    "text": "14.2 Exercise 7: A Histogram of Elevation\nPart a Let’s dig into some details.\nHow many hikes have an elevation between 4500 and 4700 feet?\n\n6\n\nHow many total hikes have an elevation of at least 5100 feet?\n\n2\n\nPart b Now the bigger picture. In general, histograms allow us to examine the following properties of a quantitative variable:\ntypical outcome: Where’s the center of the data points? What’s typical?\n\nthe center is 4400. But the most typical elevation is 4000\n\nvariability & range: How spread out are the outcomes? What are the max and min outcomes?\n\n3500 to 5500\n\nshape: How are values distributed along the observed range? Is the distribution symmetric, right-skewed, left-skewed, bi-modal, or uniform (flat)?\n\nit is leftskewed\n\noutliers: Are there any outliers, i.e. outcomes that are unusually large/small?\nI dont think so.\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Addressing each of the features in the above list, summarize below what you learned from the histogram, in context.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-8-building-histograms---part-1",
    "href": "ica/ica-uni.html#exercise-8-building-histograms---part-1",
    "title": "\n11  Univariate Viz\n",
    "section": "\n14.3 Exercise 8: Building Histograms - Part 1",
    "text": "14.3 Exercise 8: Building Histograms - Part 1\n\n#ggplot(hikes, aes(x = elevation))+\n  #geom_histogram()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#exercise-9-building-histograms---part-2",
    "href": "ica/ica-uni.html#exercise-9-building-histograms---part-2",
    "title": "\n11  Univariate Viz\n",
    "section": "\n14.4 Exercise 9: Building Histograms - Part 2",
    "text": "14.4 Exercise 9: Building Histograms - Part 2\n\n# Adds a histogram lines\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html",
    "href": "ica/ica-bi.html",
    "title": "\n12  Bivariate Viz\n",
    "section": "",
    "text": "12.1 Exercise 0: Review\n# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n\n#library\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-1-quantitative-vs-quantitative-intuition-check",
    "href": "ica/ica-bi.html#exercise-1-quantitative-vs-quantitative-intuition-check",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n14.1 Exercise 1: Quantitative vs Quantitative Intuition Check",
    "text": "14.1 Exercise 1: Quantitative vs Quantitative Intuition Check\n\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20)) +\n  geom_point()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-2-2-quantitiative-variables",
    "href": "ica/ica-bi.html#exercise-2-2-quantitiative-variables",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n14.2 Exercise 2: 2 Quantitiative Variables",
    "text": "14.2 Exercise 2: 2 Quantitiative Variables\n\n# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\n# both axis are variables\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n\n\n\n\n\n# Add a layer of points for each county\n# Take note of the geom!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n\n\n\n\n\n# Change the shape of the points\n# What happens if you change the shape to another number?\n#It changes the shape of the point\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 2)\n\n\n\n\n\n\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")\n\n\n\n\n\n\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-3-reflect",
    "href": "ica/ica-bi.html#exercise-3-reflect",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n14.3 Exercise 3: Reflect",
    "text": "14.3 Exercise 3: Reflect\nSummarize the relationship between the Republican support in 2020 and 2016. Be sure to comment on:\nthe strength of the relationship (weak/moderate/strong) the direction of the relationship (positive/negative) outliers (in what state do counties deviate from the national trend? Any ideas why this might be the case?)\nThere is a strong positive relationship between counties that voted republican in 2016 and 2020 with no real outliers. Some texas counties deviate from the trend but not by that much. Perhaps from increased urbanization in these areas?",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-4-visualizing-trend",
    "href": "ica/ica-bi.html#exercise-4-visualizing-trend",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n14.4 Exercise 4: Visualizing trend",
    "text": "14.4 Exercise 4: Visualizing trend\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-5-your-turn",
    "href": "ica/ica-bi.html#exercise-5-your-turn",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n16.1 Exercise 5: Your Turn",
    "text": "16.1 Exercise 5: Your Turn\n\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes(y = repub_pct_20, x = median_age)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-6-a-sad-scatterplot",
    "href": "ica/ica-bi.html#exercise-6-a-sad-scatterplot",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n16.2 Exercise 6: A Sad Scatterplot",
    "text": "16.2 Exercise 6: A Sad Scatterplot\n\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_point()\n\n\n\n\n\n\n\nIts a categorical variable, so a scatter plot does not make sense to illustrate this data.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-7-quantitative-vs-categorical-violins-boxes",
    "href": "ica/ica-bi.html#exercise-7-quantitative-vs-categorical-violins-boxes",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n16.3 Exercise 7: Quantitative vs Categorical – Violins & Boxes",
    "text": "16.3 Exercise 7: Quantitative vs Categorical – Violins & Boxes\n\n# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n\n\n\n\n\n# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n\n\n\n\n\n\n\nRepublican support is highest in historically red and lowest in historically blue counties. However in 2020 many counties showed less support of republicans beacuse they are lower outliers.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-8-quantitative-vs-categorical-intuition-check",
    "href": "ica/ica-bi.html#exercise-8-quantitative-vs-categorical-intuition-check",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n16.4 Exercise 8: Quantitative vs Categorical – Intuition Check",
    "text": "16.4 Exercise 8: Quantitative vs Categorical – Intuition Check\n\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()+\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-9-quantitative-vs-categorical-density-plots",
    "href": "ica/ica-bi.html#exercise-9-quantitative-vs-categorical-density-plots",
    "title": "\n12  Bivariate Viz\n",
    "section": "\n16.5 Exercise 9: Quantitative vs Categorical – Density Plots",
    "text": "16.5 Exercise 9: Quantitative vs Categorical – Density Plots\n\n# Name two \"bad\" things about this plot\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n\n\n\n\n\n\n# the colors are wrong, the axis labels is bad\n\n\n# What does scale_fill_manual do?\n# change the colors\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html",
    "href": "ica/ica-multi.html",
    "title": "\n13  Mulivariate Viz\n",
    "section": "",
    "text": "13.1 The story\n# Import and check out data\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-1-sat-scores",
    "href": "ica/ica-multi.html#exercise-1-sat-scores",
    "title": "\n13  Mulivariate Viz\n",
    "section": "\n13.2 Exercise 1: SAT scores",
    "text": "13.2 Exercise 1: SAT scores\n\nggplot(education, aes(x = sat)) +\n  geom_density()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-2-sat-scores-vs-per-pupil-spending-sat-scores-vs-salaries",
    "href": "ica/ica-multi.html#exercise-2-sat-scores-vs-per-pupil-spending-sat-scores-vs-salaries",
    "title": "\n13  Mulivariate Viz\n",
    "section": "\n14.1 Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries",
    "text": "14.1 Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries\n\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(x = expend, y = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(x = salary, y = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nI’m surprised by what appears to be a negtative relationship between average sat score and salary or per student expenditure.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-3-sat-scores-vs-per-pupil-spending-and-teacher-salaries",
    "href": "ica/ica-multi.html#exercise-3-sat-scores-vs-per-pupil-spending-and-teacher-salaries",
    "title": "\n13  Mulivariate Viz\n",
    "section": "\n14.2 Exercise 3: SAT Scores vs Per Pupil Spending and Teacher Salaries",
    "text": "14.2 Exercise 3: SAT Scores vs Per Pupil Spending and Teacher Salaries\n\nggplot(education, aes(x = expend, y = sat, color = salary)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\nggplot(education, aes(x = salary, y = sat)) +\n  geom_point()+\n  facet_grid(~expend)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-4-another-way-to-incorporate-scale",
    "href": "ica/ica-multi.html#exercise-4-another-way-to-incorporate-scale",
    "title": "\n13  Mulivariate Viz\n",
    "section": "\n14.3 Exercise 4: Another way to Incorporate Scale",
    "text": "14.3 Exercise 4: Another way to Incorporate Scale\n\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-5-finally-an-explanation",
    "href": "ica/ica-multi.html#exercise-5-finally-an-explanation",
    "title": "\n13  Mulivariate Viz\n",
    "section": "\n14.4 Exercise 5: Finally an Explanation",
    "text": "14.4 Exercise 5: Finally an Explanation",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html",
    "href": "ica/ica-spatial.html",
    "title": "\n14  Spatial Viz\n",
    "section": "",
    "text": "14.1 Exercise 1: A leaflet with markers / points\nfave_places &lt;- read.csv(\"https://ajohns24.github.io/data/112/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n\n  latitude longitude\n1       46      -123\n2       33        52\n3       48       -90\n4       36      -112\n5       59        25\n6       39      -106",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-2-details",
    "href": "ica/ica-spatial.html#exercise-2-details",
    "title": "\n14  Spatial Viz\n",
    "section": "\n15.1 Exercise 2: Details",
    "text": "15.1 Exercise 2: Details\n\n# Load package needed to change color\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\n# We can add colored circles instead of markers at each location\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addCircles(color = col2hex(\"red\"))\n\n\n\n\n\n\n# We can change the background\n# Mark locations with yellow dots\n# And connect the dots, in their order in the dataset, with green lines\n# (These green lines don't mean anything here, but would if this were somebody's travel path!)\nleaflet(data = fave_places) |&gt;\n  addProviderTiles(\"USGS\") |&gt;\n  addCircles(weight = 10, opacity = 1, color = col2hex(\"yellow\")) |&gt;\n  addPolylines(\n    lng = ~longitude,\n    lat = ~latitude,\n    color = col2hex(\"green\")\n  )",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-3-your-turn",
    "href": "ica/ica-spatial.html#exercise-3-your-turn",
    "title": "\n14  Spatial Viz\n",
    "section": "\n15.2 Exercise 3: Your turn",
    "text": "15.2 Exercise 3: Your turn\n\n# Import starbucks location data\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\n\n# Don't worry about the syntax\nstarbucks_mn &lt;- starbucks %&gt;%    \n  filter(Country == \"US\", State.Province == \"MN\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-3-a-simple-scatterplot",
    "href": "ica/ica-spatial.html#exercise-3-a-simple-scatterplot",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.1 Exercise 3: A simple scatterplot",
    "text": "16.1 Exercise 3: A simple scatterplot\n\nggplot(starbucks, aes(x = Latitude, y = Longitude)) +\n  geom_point(alpha = 0.2, size = 0.2)\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-4-adding-a-country-level-background",
    "href": "ica/ica-spatial.html#exercise-4-adding-a-country-level-background",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.2 Exercise 4: Adding a country-level background",
    "text": "16.2 Exercise 4: Adding a country-level background\n\n# Load the package\nlibrary(rnaturalearth)\n\n# Get info about country boundaries across the world\n# in a \"sf\" or simple feature format\nworld_boundaries &lt;- ne_countries(returnclass = \"sf\")\n\n\n# What does this code produce?\n# What geom are we using for the point map?\nggplot(world_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\n# Load package needed to change map theme\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\n# Add a point for each Starbucks\n# NOTE: The Starbucks info is in our starbucks data, not world_boundaries\n# How does this change how we use geom_point?!\nggplot(world_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3, size = 0.2, color = \"darkgreen\"\n  ) +\n  theme_map()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nStarbucks is very common in the US Europe and east Asia.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-5-zooming-in-on-some-countries",
    "href": "ica/ica-spatial.html#exercise-5-zooming-in-on-some-countries",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.3 Exercise 5: Zooming in on some countries",
    "text": "16.3 Exercise 5: Zooming in on some countries\n\n# We'll learn this syntax soon! Don't worry about it now.\nstarbucks_cma &lt;- starbucks |&gt; \n  filter(Country %in% c('CA', 'MX', 'US'))\n\n\ncma_boundaries &lt;- ne_states(\n  country = c(\"canada\", \"mexico\", \"united states of america\"),\n  returnclass = \"sf\")\n\n\n# Just the boundaries\nggplot(cma_boundaries) + \n  geom_sf()\n\n\n\n\n\n\n\n\n# Add the points\n# And zoom in\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3,\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50)) +\n  theme_map()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-6-a-state-and-county-level-map",
    "href": "ica/ica-spatial.html#exercise-6-a-state-and-county-level-map",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.4 Exercise 6: A state and county-level map",
    "text": "16.4 Exercise 6: A state and county-level map\n\nstarbucks_midwest &lt;- starbucks |&gt; \n  filter(State.Province %in% c(\"MN\", \"ND\", \"SD\", \"WI\"))\n\n\n# Load packages\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\n# Get the boundaries\nmidwest_boundaries &lt;- st_as_sf(\n  maps::map(\"county\",\n            region = c(\"minnesota\", \"wisconsin\", \"north dakota\", \"south dakota\"), \n            fill = TRUE, plot = FALSE))\n\n# Check it out\nhead(midwest_boundaries)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.81268 ymin: 45.05167 xmax: -93.01397 ymax: 48.53526\nGeodetic CRS:  +proj=longlat +ellps=clrk66 +no_defs +type=crs\n                                     ID                           geom\nminnesota,aitkin       minnesota,aitkin MULTIPOLYGON (((-93.03689 4...\nminnesota,anoka         minnesota,anoka MULTIPOLYGON (((-93.51817 4...\nminnesota,becker       minnesota,becker MULTIPOLYGON (((-95.14537 4...\nminnesota,beltrami   minnesota,beltrami MULTIPOLYGON (((-95.58655 4...\nminnesota,benton       minnesota,benton MULTIPOLYGON (((-93.77027 4...\nminnesota,big stone minnesota,big stone MULTIPOLYGON (((-96.10794 4...\n\n\n\nggplot(midwest_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks_midwest,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.7,\n    size = 0.2, \n    color = 'darkgreen'\n    ) + \n  theme_map()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-7-contour-maps",
    "href": "ica/ica-spatial.html#exercise-7-contour-maps",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.5 Exercise 7: Contour maps",
    "text": "16.5 Exercise 7: Contour maps\n\n# What changed in the plot?\n# What changed in our code?!\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_density_2d(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#part-3-choropleth-maps",
    "href": "ica/ica-spatial.html#part-3-choropleth-maps",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.6 Part 3: Choropleth maps",
    "text": "16.6 Part 3: Choropleth maps\n\nelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n# Get the latitude and longitude coordinates of state boundaries\nstates_map &lt;- map_data(\"state\")\n\n# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\n# Check it out\nhead(states_map)\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      &lt;NA&gt;\n2 -87.48493 30.37249     1     2 alabama      &lt;NA&gt;\n3 -87.52503 30.37249     1     3 alabama      &lt;NA&gt;\n4 -87.53076 30.33239     1     4 alabama      &lt;NA&gt;\n5 -87.57087 30.32665     1     5 alabama      &lt;NA&gt;\n6 -87.58806 30.32665     1     6 alabama      &lt;NA&gt;\n\n\n\nhead(states_map)\n\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      &lt;NA&gt;\n2 -87.48493 30.37249     1     2 alabama      &lt;NA&gt;\n3 -87.52503 30.37249     1     3 alabama      &lt;NA&gt;\n4 -87.53076 30.33239     1     4 alabama      &lt;NA&gt;\n5 -87.57087 30.32665     1     5 alabama      &lt;NA&gt;\n6 -87.58806 30.32665     1     6 alabama      &lt;NA&gt;\n\n\n\nhead(elections_by_state) \n\n   state_name state_abbr repub_pct_20 repub_20_categories\n1     alabama         AL        62.03               60-64\n2    arkansas         AR        62.40               60-64\n3     arizona         AZ        49.06               45-49\n4  california         CA        34.33               30-34\n5    colorado         CO        41.90               40-44\n6 connecticut         CT        39.21               35-39\n\n\n\n# Note where the dataset, elections_by_state, is used\n# Note where the background map, states_map, is used\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() \n\n\n\n\n\n\n\n\n# Make it nicer!\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_pct_20)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_gradientn(name = \"% Republican\", colors = c(\"blue\", \"purple\", \"red\"), values = scales::rescale(seq(0, 100, by = 5)))\n\n\n\n\n\n\n\n\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map()\n\n\n\n\n\n\n\n\n# Load package needed for refining color palette\nlibrary(RColorBrewer)\n\n# Now fix the colors\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\n# Get only the starbucks data from the US\nstarbucks_us &lt;- starbucks |&gt; \n  filter(Country == \"US\")\n\n# Map it\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  geom_point(\n    data = starbucks_us,\n    aes(x = Longitude, y = Latitude),\n    size = 0.05,\n    alpha = 0.2,\n    inherit.aes = FALSE\n  ) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() + \n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\")\n\n\n\n\n\n\n\n\n# Get the latitude and longitude coordinates of county boundaries\nlibrary(socviz)\ndata(county_map) \n\n# Check it out\nhead(county_map)\n\n     long      lat order  hole piece            group    id\n1 1225889 -1275020     1 FALSE     1 0500000US01001.1 01001\n2 1235324 -1274008     2 FALSE     1 0500000US01001.1 01001\n3 1244873 -1272331     3 FALSE     1 0500000US01001.1 01001\n4 1244129 -1267515     4 FALSE     1 0500000US01001.1 01001\n5 1272010 -1262889     5 FALSE     1 0500000US01001.1 01001\n6 1276797 -1295514     6 FALSE     1 0500000US01001.1 01001\n\n\n\nhead(county_map)\n\n     long      lat order  hole piece            group    id\n1 1225889 -1275020     1 FALSE     1 0500000US01001.1 01001\n2 1235324 -1274008     2 FALSE     1 0500000US01001.1 01001\n3 1244873 -1272331     3 FALSE     1 0500000US01001.1 01001\n4 1244129 -1267515     4 FALSE     1 0500000US01001.1 01001\n5 1272010 -1262889     5 FALSE     1 0500000US01001.1 01001\n6 1276797 -1295514     6 FALSE     1 0500000US01001.1 01001\n\n\n\nhead(elections_by_counties)\n\n  state_name state_abbr    county_name county_fips repub_pct_20 median_age\n1    Alabama         AL Autauga County        1001        71.44       37.5\n2    Alabama         AL Baldwin County        1003        76.17       41.5\n3    Alabama         AL Barbour County        1005        53.45       38.3\n4    Alabama         AL    Bibb County        1007        78.43       39.4\n5    Alabama         AL  Blount County        1009        89.57       39.6\n6    Alabama         AL Bullock County        1011        24.84       39.6\n  median_rent repub_20_categories\n1         668               70-79\n2         693               70-79\n3         382               50-59\n4         351               70-79\n5         403               80-89\n6         276               20-29\n\n\n\n# Add 0's at the beginning of any fips_code that's fewer than 5 numbers long\n# Don't worry about the syntax\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = repub_20_categories)) +\n  geom_map(map = county_map) +\n  scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-10-play-around",
    "href": "ica/ica-spatial.html#exercise-10-play-around",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.7 Exercise 10: Play around!",
    "text": "16.7 Exercise 10: Play around!\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_rent)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal() +\n  scale_fill_gradient(low=\"white\", high = \"blue\")\n\n\n\n\n\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_age)) +\n  geom_map(map = county_map) +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal() +\n  scale_fill_gradient(low=\"white\", high = \"green\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-11-choropleth-maps-with-leaflet",
    "href": "ica/ica-spatial.html#exercise-11-choropleth-maps-with-leaflet",
    "title": "\n14  Spatial Viz\n",
    "section": "\n16.8 Exercise 11: Choropleth maps with leaflet",
    "text": "16.8 Exercise 11: Choropleth maps with leaflet\n\n# From https://leafletjs.com/examples/choropleth/us-states.js\nstates &lt;- sf::read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\")\n\nbins &lt;- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)\npal &lt;- colorBin(\"YlOrRd\", domain = states$density, bins = bins)\n\nlabels &lt;- sprintf(\n  \"&lt;strong&gt;%s&lt;/strong&gt;&lt;br/&gt;%g people / mi&lt;sup&gt;2&lt;/sup&gt;\",\n  states$name, states$density\n) %&gt;% lapply(htmltools::HTML)\n\nleaflet(states) %&gt;%\n  setView(-96, 37.8, 4) %&gt;%\n  addProviderTiles(\"MapBox\", options = providerTileOptions(\n    id = \"mapbox.light\",\n    accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %&gt;%\n  addPolygons(\n    fillColor = ~pal(density),\n    weight = 2,\n    opacity = 1,\n    color = \"white\",\n    dashArray = \"3\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(\n      weight = 5,\n      color = \"#666\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE),\n    label = labels,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) %&gt;%\n  addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,\n    position = \"bottomright\")\n\nWarning in sf::st_is_longlat(x): bounding box has potentially an invalid value\nrange for longlat data",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html",
    "href": "ica/ica-wrangling.html",
    "title": "\n15  ica-wrangling\n",
    "section": "",
    "text": "15.1 Exercise 1: select Practice\n# Define elections_small\nelections_small &lt;- elections %&gt;% \n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\n# Check out the first 6 rows to confirm your code did what you think it did!\nhead(elections_small)\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-2-filter-demo",
    "href": "ica/ica-wrangling.html#exercise-2-filter-demo",
    "title": "\n15  ica-wrangling\n",
    "section": "\n15.2 Exercise 2: filter Demo",
    "text": "15.2 Exercise 2: filter Demo\n\n# Keep only data on counties in Hawaii\nelections_small |&gt;\n filter(state_name == \"Hawaii\")\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n\n\n\n# What does this do?\nelections_small |&gt;\n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n\n\n\n# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020\n# THINK: What variable is relevant here?\nelections_small |&gt;\n  filter(repub_pct_20 &gt;= 93.97)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Montana Garfield County            813        93.97       5.04\n2      Texas   Borden County            416        95.43       3.85\n3      Texas     King County            159        94.97       5.03\n4      Texas  Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            715       4.76\n2            365       8.49\n3            159       3.14\n4            550       3.64\n\n\n\n# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020\n# Do this 2 ways.\n# Method 1: 2 filters with 1 condition each\nelections_small |&gt;\n filter(state_name == \"Texas\") |&gt;\n filter(dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n\n# Method 2: 1 filter with 2 conditions\nelections_small |&gt;\n filter(state_name == \"Texas\", dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-3-arrange-demo",
    "href": "ica/ica-wrangling.html#exercise-3-arrange-demo",
    "title": "\n15  ica-wrangling\n",
    "section": "\n15.3 Exercise 3: arrange Demo",
    "text": "15.3 Exercise 3: arrange Demo\n\n# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n# Print out just the first 6 rows\nelections_small |&gt;\n  arrange(repub_pct_20) |&gt;\n  head()\n\n            state_name            county_name total_votes_20 repub_pct_20\n1 District of Columbia   District of Columbia         344356         5.40\n2             Maryland Prince George's County         424855         8.73\n3             Maryland         Baltimore city         237461        10.69\n4             Virginia        Petersburg city          14118        11.22\n5             New York        New York County         694904        12.26\n6           California   San Francisco County         443458        12.72\n  dem_pct_20 total_votes_16 dem_pct_16\n1      92.15         280272      92.85\n2      89.26         351091      89.33\n3      87.28         208980      85.44\n4      87.75          13717      87.52\n5      86.78         591368      87.17\n6      85.27         365295      85.53\n\n\n\n# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support\n# Print out just the first 6 rows\n\nelections_small |&gt;\n  arrange(desc(repub_pct_20)) |&gt;\n  head()\n\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-4-mutate-demo",
    "href": "ica/ica-wrangling.html#exercise-4-mutate-demo",
    "title": "\n15  ica-wrangling\n",
    "section": "\n15.4 Exercise 4: mutate Demo",
    "text": "15.4 Exercise 4: mutate Demo\n\n# What did this code do?\nelections_small |&gt;\n  mutate(diff_20 = repub_pct_20 - dem_pct_20) |&gt;\n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86\n\n\nCreates a new column with the difference between democrat and republican vote %\n\n# What did this code do?\nelections_small |&gt;\n  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |&gt;\n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_votes_20\n1          24661      23.96          19839\n2          94090      19.57          83542\n3          10390      46.66           5622\n4           8748      21.42           7525\n5          25384       8.47          24711\n6           4701      75.09           1146\n\n\nCreates a new column with the actual number of republican votes not just a percentage\n\n# What did this code do?\nelections_small |&gt;\n  mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) |&gt;\n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_win_20\n1          24661      23.96         TRUE\n2          94090      19.57         TRUE\n3          10390      46.66         TRUE\n4           8748      21.42         TRUE\n5          25384       8.47         TRUE\n6           4701      75.09        FALSE\n\n\nCreates a new column that shows weather binary indicator of weather the republicans won the county\n\n# You try\n# Define a variable that calculates the change in Dem support in 2020 vs 2016\nelections_small |&gt;\n mutate(dem_change = dem_pct_20 - dem_pct_16) |&gt;\n head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_change\n1          24661      23.96       3.06\n2          94090      19.57       2.84\n3          10390      46.66      -0.87\n4           8748      21.42      -0.72\n5          25384       8.47       1.10\n6           4701      75.09      -0.39\n\n\n\n# You try\n# Define a variable that determines whether the Dem support was higher in 2020 than in 2016 (TRUE/FALSE)\nelections_small |&gt;\n mutate(dem_improve = dem_pct_20 &gt; dem_pct_16) |&gt;\n head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_improve\n1          24661      23.96        TRUE\n2          94090      19.57        TRUE\n3          10390      46.66       FALSE\n4           8748      21.42       FALSE\n5          25384       8.47        TRUE\n6           4701      75.09       FALSE",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-5-pipe-series",
    "href": "ica/ica-wrangling.html#exercise-5-pipe-series",
    "title": "\n15  ica-wrangling\n",
    "section": "\n15.5 Exercise 5: Pipe Series",
    "text": "15.5 Exercise 5: Pipe Series",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-6-diy-pipe-series",
    "href": "ica/ica-wrangling.html#exercise-6-diy-pipe-series",
    "title": "\n15  ica-wrangling\n",
    "section": "\n20.1 Exercise 6: DIY Pipe Series",
    "text": "20.1 Exercise 6: DIY Pipe Series",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-7-summarize-demo",
    "href": "ica/ica-wrangling.html#exercise-7-summarize-demo",
    "title": "\n15  ica-wrangling\n",
    "section": "\n23.1 Exercise 7: summarize Demo",
    "text": "23.1 Exercise 7: summarize Demo\n\n# What does this do?\nelections_small |&gt;\n  summarize(median(repub_pct_20))\n\n  median(repub_pct_20)\n1                68.29\n\n\nfinds the median republican percentage for all US counties in 2020\n\n# What does this do?\nelections_small |&gt;\n  summarize(median_repub = median(repub_pct_20))\n\n  median_repub\n1        68.29\n\n\nmakes the title more intelegable\n\n# What does this do?\nelections_small |&gt;\n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n\n  median_repub total_votes\n1        68.29   157949293\n\n\nit adds the summary of the total votes in the us in 2020",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-8-summarize-group_by-demo",
    "href": "ica/ica-wrangling.html#exercise-8-summarize-group_by-demo",
    "title": "\n15  ica-wrangling\n",
    "section": "\n23.2 Exercise 8: summarize + group_by demo",
    "text": "23.2 Exercise 8: summarize + group_by demo\n\nelections_small |&gt;\n  group_by(state_name)\n\n# A tibble: 3,109 × 7\n# Groups:   state_name [50]\n   state_name county_name  total_votes_20 repub_pct_20 dem_pct_20 total_votes_16\n   &lt;chr&gt;      &lt;chr&gt;                 &lt;int&gt;        &lt;dbl&gt;      &lt;dbl&gt;          &lt;int&gt;\n 1 Alabama    Autauga Cou…          27770         71.4      27.0           24661\n 2 Alabama    Baldwin Cou…         109679         76.2      22.4           94090\n 3 Alabama    Barbour Cou…          10518         53.4      45.8           10390\n 4 Alabama    Bibb County            9595         78.4      20.7            8748\n 5 Alabama    Blount Coun…          27588         89.6       9.57          25384\n 6 Alabama    Bullock Cou…           4613         24.8      74.7            4701\n 7 Alabama    Butler Coun…           9488         57.5      41.8            8685\n 8 Alabama    Calhoun Cou…          50983         68.8      29.8           47376\n 9 Alabama    Chambers Co…          15284         57.3      41.6           13778\n10 Alabama    Cherokee Co…          12301         86.0      13.2           10503\n# ℹ 3,099 more rows\n# ℹ 1 more variable: dem_pct_16 &lt;dbl&gt;\n\n\n\n# Check out the structure before and after group_by\nelections_small |&gt;\n  class()\n\n[1] \"data.frame\"\n\nelections_small |&gt;\n  group_by(state_name) |&gt;\n  class()\n\n[1] \"grouped_df\" \"tbl_df\"     \"tbl\"        \"data.frame\"",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>ica-wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html",
    "href": "ica/ica-dates.html",
    "title": "\n16  ica-dates\n",
    "section": "",
    "text": "16.1 Exercise 1: More Filtering\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npenguins &lt;- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')\n\nRows: 344 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Check it out\nhead(penguins)\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n# Create a dataset with just Adelie and Chinstrap using %in%\n# Pipe this into `count(species)` to confirm that you only have these 2 species\npenguins |&gt;\n  filter(species %in% c(\"Adelie\", \"Chinstrap\")) |&gt;\n  count(species)\n\n# A tibble: 2 × 2\n  species       n\n  &lt;chr&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\npenguins |&gt;\n  filter(species != \"Gentoo\") |&gt;\n  count(species)\n\n# A tibble: 2 × 2\n  species       n\n  &lt;chr&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n# NOTE the use of is.na()\npenguins_w_body_mass &lt;- penguins |&gt; \n  filter(!is.na(body_mass_g))\n\n# Compare the number of penguins in this vs the original data\nnrow(penguins_w_body_mass)\n\n[1] 342\nWe should only use na.omit in extreme circumstances beacuse if there are NAs in a column we are not focusing on, it will still get rid of them even though it wasnt necessary.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-2-more-selecting",
    "href": "ica/ica-dates.html#exercise-2-more-selecting",
    "title": "\n16  ica-dates\n",
    "section": "\n16.2 Exercise 2: More Selecting",
    "text": "16.2 Exercise 2: More Selecting\n\n# First: recall the variable names\nnames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\"             \n\n\n\n# Use a shortcut to keep everything but the year and island variables\npenguins %&gt;% \n  select(-island, -year)\n\n# A tibble: 344 × 6\n   species bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex   \n   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt; \n 1 Adelie            39.1          18.7               181        3750 male  \n 2 Adelie            39.5          17.4               186        3800 female\n 3 Adelie            40.3          18                 195        3250 female\n 4 Adelie            NA            NA                  NA          NA &lt;NA&gt;  \n 5 Adelie            36.7          19.3               193        3450 female\n 6 Adelie            39.3          20.6               190        3650 male  \n 7 Adelie            38.9          17.8               181        3625 female\n 8 Adelie            39.2          19.6               195        4675 male  \n 9 Adelie            34.1          18.1               193        3475 &lt;NA&gt;  \n10 Adelie            42            20.2               190        4250 &lt;NA&gt;  \n# ℹ 334 more rows\n\n\n\n# Use a shortcut to keep only species and the penguin characteristics measured in mm\npenguins %&gt;% \n  select(contains(\"mm\"))\n\n# A tibble: 344 × 3\n   bill_length_mm bill_depth_mm flipper_length_mm\n            &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;\n 1           39.1          18.7               181\n 2           39.5          17.4               186\n 3           40.3          18                 195\n 4           NA            NA                  NA\n 5           36.7          19.3               193\n 6           39.3          20.6               190\n 7           38.9          17.8               181\n 8           39.2          19.6               195\n 9           34.1          18.1               193\n10           42            20.2               190\n# ℹ 334 more rows\n\n\n\n# Use a shortcut to keep only species and bill-related measurements\npenguins %&gt;%\n  select(species, contains(\"bill\"))\n\n# A tibble: 344 × 3\n   species bill_length_mm bill_depth_mm\n   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;\n 1 Adelie            39.1          18.7\n 2 Adelie            39.5          17.4\n 3 Adelie            40.3          18  \n 4 Adelie            NA            NA  \n 5 Adelie            36.7          19.3\n 6 Adelie            39.3          20.6\n 7 Adelie            38.9          17.8\n 8 Adelie            39.2          19.6\n 9 Adelie            34.1          18.1\n10 Adelie            42            20.2\n# ℹ 334 more rows\n\n\n\n# Use a shortcut to keep only species and the length-related characteristics\npenguins %&gt;%\n  select(species, contains(\"length\"))\n\n# A tibble: 344 × 3\n   species bill_length_mm flipper_length_mm\n   &lt;chr&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n 1 Adelie            39.1               181\n 2 Adelie            39.5               186\n 3 Adelie            40.3               195\n 4 Adelie            NA                  NA\n 5 Adelie            36.7               193\n 6 Adelie            39.3               190\n 7 Adelie            38.9               181\n 8 Adelie            39.2               195\n 9 Adelie            34.1               193\n10 Adelie            42                 190\n# ℹ 334 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-3-arranging-counting-grouping-by-multiple-variables",
    "href": "ica/ica-dates.html#exercise-3-arranging-counting-grouping-by-multiple-variables",
    "title": "\n16  ica-dates\n",
    "section": "\n16.3 Exercise 3: Arranging, Counting, & Grouping by Multiple Variables",
    "text": "16.3 Exercise 3: Arranging, Counting, & Grouping by Multiple Variables\n\n# Change this code to sort the penguins by species, and then island name\n# NOTE: The first row should be an Adelie penguin living on Biscoe island\npenguins |&gt; \n  arrange(species, island)\n\n# A tibble: 344 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n 1 Adelie  Biscoe           37.8          18.3               174        3400\n 2 Adelie  Biscoe           37.7          18.7               180        3600\n 3 Adelie  Biscoe           35.9          19.2               189        3800\n 4 Adelie  Biscoe           38.2          18.1               185        3950\n 5 Adelie  Biscoe           38.8          17.2               180        3800\n 6 Adelie  Biscoe           35.3          18.9               187        3800\n 7 Adelie  Biscoe           40.6          18.6               183        3550\n 8 Adelie  Biscoe           40.5          17.9               187        3200\n 9 Adelie  Biscoe           37.9          18.6               172        3150\n10 Adelie  Biscoe           40.5          18.9               180        3950\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n\n\n\n# Change this code to count the number of male/female penguins observed for each species\npenguins |&gt; \n  count(species, sex)\n\n# A tibble: 8 × 3\n  species   sex        n\n  &lt;chr&gt;     &lt;chr&gt;  &lt;int&gt;\n1 Adelie    female    73\n2 Adelie    male      73\n3 Adelie    &lt;NA&gt;       6\n4 Chinstrap female    34\n5 Chinstrap male      34\n6 Gentoo    female    58\n7 Gentoo    male      61\n8 Gentoo    &lt;NA&gt;       5\n\n\n\n# Change this code to calculate the average body mass by species and sex\npenguins |&gt; \n  group_by(species, sex) |&gt; \n  summarize(mean = mean(body_mass_g, na.rm = TRUE))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex     mean\n  &lt;chr&gt;     &lt;chr&gt;  &lt;dbl&gt;\n1 Adelie    female 3369.\n2 Adelie    male   4043.\n3 Adelie    &lt;NA&gt;   3540 \n4 Chinstrap female 3527.\n5 Chinstrap male   3939.\n6 Gentoo    female 4680.\n7 Gentoo    male   5485.\n8 Gentoo    &lt;NA&gt;   4588.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-4-dates",
    "href": "ica/ica-dates.html#exercise-4-dates",
    "title": "\n16  ica-dates\n",
    "section": "\n16.4 Exercise 4: Dates",
    "text": "16.4 Exercise 4: Dates\n\n# Get today's date\nas.Date(today())\n\n[1] \"2025-02-26\"\n\n\n\n# Let's store this as \"today\" so we can work with it below\ntoday &lt;- as.Date(today())\n\n# Check out the class of this object\nclass(today)\n\n[1] \"Date\"\n\n\n\nyear(today)\n\n[1] 2025\n\n\n\n# What do these lines produce / what's their difference?\nmonth(today)\n\n[1] 2\n\n\n\nmonth(today, label = TRUE)\n\n[1] Feb\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\n\n\n# What does this number mean?\nweek(today)\n\n[1] 9\n\n\nit means we are 9 weeks into the year\n\n# What do these lines produce / what's their difference?\nmday(today)\n\n[1] 26\n\n\n26 days into the month\n\nyday(today)  # This is often called the \"Julian day\"\n\n[1] 57\n\n\n57 days into the year\n\n# What do these lines produce / what's their difference?\nwday(today)\n\n[1] 4\n\n\n4 days into the week\n\nwday(today, label = TRUE)\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\n\n\n# What do the results of these 2 lines tell us?\ntoday &gt;= ymd(\"2024-02-14\")\n\n[1] TRUE\n\n\n\ntoday &lt; ymd(\"2024-02-14\")\n\n[1] FALSE",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercises-part-2-application",
    "href": "ica/ica-dates.html#exercises-part-2-application",
    "title": "\n16  ica-dates\n",
    "section": "\n16.5 Exercises Part 2: Application",
    "text": "16.5 Exercises Part 2: Application\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\ndata(\"Birthdays\")\nhead(Birthdays)\n\n  state year month day       date wday births\n1    AK 1969     1   1 1969-01-01  Wed     14\n2    AL 1969     1   1 1969-01-01  Wed    174\n3    AR 1969     1   1 1969-01-01  Wed     78\n4    AZ 1969     1   1 1969-01-01  Wed     84\n5    CA 1969     1   1 1969-01-01  Wed    824\n6    CO 1969     1   1 1969-01-01  Wed    100",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-5-warming-up",
    "href": "ica/ica-dates.html#exercise-5-warming-up",
    "title": "\n16  ica-dates\n",
    "section": "\n16.6 Exercise 5: Warming up",
    "text": "16.6 Exercise 5: Warming up\n\n# How many days of data do we have for each state?\nBirthdays %&gt;% \n  count(state)\n\n   state    n\n1     AK 7306\n2     AL 7312\n3     AR 7310\n4     AZ 7310\n5     CA 7325\n6     CO 7305\n7     CT 7312\n8     DC 7311\n9     DE 7307\n10    FL 7307\n11    GA 7314\n12    HI 7306\n13    IA 7306\n14    ID 7306\n15    IL 7314\n16    IN 7311\n17    KS 7311\n18    KY 7313\n19    LA 7309\n20    MA 7315\n21    MD 7311\n22    ME 7309\n23    MI 7323\n24    MN 7315\n25    MO 7309\n26    MS 7310\n27    MT 7305\n28    NC 7307\n29    ND 7305\n30    NE 7305\n31    NH 7308\n32    NJ 7321\n33    NM 7308\n34    NV 7307\n35    NY 7333\n36    OH 7319\n37    OK 7306\n38    OR 7307\n39    PA 7330\n40    RI 7305\n41    SC 7314\n42    SD 7305\n43    TN 7308\n44    TX 7330\n45    UT 7307\n46    VA 7310\n47    VT 7305\n48    WA 7306\n49    WI 7311\n50    WV 7310\n51    WY 7305\n\n# How many total births were there in this time period?\nBirthdays %&gt;% \n  summarise(total_births = sum(births))\n\n  total_births\n1     70486538\n\n# How many total births were there per state in this time period, sorted from low to high?\nBirthdays %&gt;% \n  group_by(state) %&gt;% \n  summarise(total_births = sum(births)) %&gt;% \n  arrange(desc(total_births))\n\n# A tibble: 51 × 2\n   state total_births\n   &lt;chr&gt;        &lt;int&gt;\n 1 CA         7822785\n 2 TX         5263473\n 3 NY         5153299\n 4 IL         3569524\n 5 OH         3336326\n 6 PA         3257112\n 7 MI         2837133\n 8 FL         2624301\n 9 NJ         1984890\n10 GA         1839630\n# ℹ 41 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-6-homework-reprise",
    "href": "ica/ica-dates.html#exercise-6-homework-reprise",
    "title": "\n16  ica-dates\n",
    "section": "\n16.7 Exercise 6: Homework Reprise",
    "text": "16.7 Exercise 6: Homework Reprise\n\ndaily_births &lt;- Birthdays %&gt;% \n  group_by(date) %&gt;% \n  mutate(wday = wday(date, label = TRUE)) %&gt;% \n  summarise(total_births = sum(births))\nhead(daily_births)\n\n# A tibble: 6 × 2\n  date                total_births\n  &lt;dttm&gt;                     &lt;int&gt;\n1 1969-01-01 00:00:00         8486\n2 1969-01-02 00:00:00         9002\n3 1969-01-03 00:00:00         9542\n4 1969-01-04 00:00:00         8960\n5 1969-01-05 00:00:00         8390\n6 1969-01-06 00:00:00         9560",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>ica-dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html",
    "href": "ica/ica-reshaping.html",
    "title": "\n17  ica-reshaping\n",
    "section": "",
    "text": "17.1 Exercise 1: What’s the problem?\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nsleep_wide &lt;- read.csv(\"https://mac-stat.github.io/data/sleep_wide.csv\")\n\nhead(sleep_wide)\n\n  Subject  day_0  day_1  day_2  day_3  day_4  day_5  day_6  day_7  day_8  day_9\n1     308 249.56 258.70 250.80 321.44 356.85 414.69 382.20 290.15 430.59 466.35\n2     309 222.73 205.27 202.98 204.71 207.72 215.96 213.63 217.73 224.30 237.31\n3     310 199.05 194.33 234.32 232.84 229.31 220.46 235.42 255.75 261.01 247.52\n4     330 321.54 300.40 283.86 285.13 285.80 297.59 280.24 318.26 305.35 354.05\n5     331 287.61 285.00 301.82 320.12 316.28 293.32 290.08 334.82 293.75 371.58\n6     332 234.86 242.81 272.96 309.77 317.46 310.00 454.16 346.83 330.30 253.86",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>ica-reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-2-pivot-longer",
    "href": "ica/ica-reshaping.html#exercise-2-pivot-longer",
    "title": "\n17  ica-reshaping\n",
    "section": "\n19.1 Exercise 2: Pivot longer",
    "text": "19.1 Exercise 2: Pivot longer",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>ica-reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-3-changing-variable-classes-plotting",
    "href": "ica/ica-reshaping.html#exercise-3-changing-variable-classes-plotting",
    "title": "\n17  ica-reshaping\n",
    "section": "\n22.1 Exercise 3: Changing variable classes & plotting",
    "text": "22.1 Exercise 3: Changing variable classes & plotting\n\nsleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\") |&gt; \n  mutate(Subject = as.factor(Subject), day = as.numeric(day))\n\n# Check it out\n# Same data, different class\nhead(sleep_long)\n\n# A tibble: 6 × 3\n  Subject   day reaction_time\n  &lt;fct&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 308         0          250.\n2 308         1          259.\n3 308         2          251.\n4 308         3          321.\n5 308         4          357.\n6 308         5          415.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>ica-reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-4-pivot-wider",
    "href": "ica/ica-reshaping.html#exercise-4-pivot-wider",
    "title": "\n17  ica-reshaping\n",
    "section": "\n24.1 Exercise 4: Pivot wider",
    "text": "24.1 Exercise 4: Pivot wider",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>ica-reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-5-practice-with-billboard-charts",
    "href": "ica/ica-reshaping.html#exercise-5-practice-with-billboard-charts",
    "title": "\n17  ica-reshaping\n",
    "section": "\n26.1 Exercise 5: Practice with Billboard charts",
    "text": "26.1 Exercise 5: Practice with Billboard charts\n\n# Load data\nlibrary(tidyr)\ndata(\"billboard\")\n\n# Check it out\nhead(billboard)\n\n# A tibble: 6 × 79\n  artist      track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n  &lt;chr&gt;       &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2 Pac       Baby… 2000-02-26      87    82    72    77    87    94    99    NA\n2 2Ge+her     The … 2000-09-02      91    87    92    NA    NA    NA    NA    NA\n3 3 Doors Do… Kryp… 2000-04-08      81    70    68    67    66    57    54    53\n4 3 Doors Do… Loser 2000-10-21      76    76    72    69    67    65    55    59\n5 504 Boyz    Wobb… 2000-04-15      57    34    25    17    17    31    36    49\n6 98^0        Give… 2000-08-19      51    39    34    26    26    19     2     2\n# ℹ 68 more variables: wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;, wk12 &lt;dbl&gt;,\n#   wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;, wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;,\n#   wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;, wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;,\n#   wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;, wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;,\n#   wk31 &lt;dbl&gt;, wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;,\n#   wk37 &lt;dbl&gt;, wk38 &lt;dbl&gt;, wk39 &lt;dbl&gt;, wk40 &lt;dbl&gt;, wk41 &lt;dbl&gt;, wk42 &lt;dbl&gt;,\n#   wk43 &lt;dbl&gt;, wk44 &lt;dbl&gt;, wk45 &lt;dbl&gt;, wk46 &lt;dbl&gt;, wk47 &lt;dbl&gt;, wk48 &lt;dbl&gt;, …",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>ica-reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-6-practice-with-the-daily-show",
    "href": "ica/ica-reshaping.html#exercise-6-practice-with-the-daily-show",
    "title": "\n17  ica-reshaping\n",
    "section": "\n30.1 Exercise 6: Practice with the Daily Show",
    "text": "30.1 Exercise 6: Practice with the Daily Show\n\nlibrary(fivethirtyeight)\n\nSome larger datasets need to be installed separately, like senators and\nhouse_district_forecast. To install these, we recommend you install the\nfivethirtyeightdata package by running:\ninstall.packages('fivethirtyeightdata', repos =\n'https://fivethirtyeightdata.github.io/drat/', type = 'source')\n\ndata(\"daily_show_guests\")\ndaily &lt;- daily_show_guests",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>ica-reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html",
    "href": "ica/ica-strings.html",
    "title": "\n18  strings\n",
    "section": "",
    "text": "18.1 Exercises",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>strings</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html#exercises",
    "href": "ica/ica-strings.html#exercises",
    "title": "\n18  strings\n",
    "section": "",
    "text": "Exercise 1: Time slots\nThe courses data includes actual data scraped from Mac’s class schedule. (Thanks to Prof Leslie Myint for the scraping code!!)\nIf you want to learn how to scrape data, take COMP/STAT 212, Intermediate Data Science! NOTE: For simplicity, I removed classes that had “TBA” for the days.\n\nCodecourses &lt;- read.csv(\"https://mac-stat.github.io/data/registrar.csv\")\n\n# Check it out\nhead(courses)\n\n       number   crn                                                name  days\n1 AMST 112-01 10318         Introduction to African American Literature M W F\n2 AMST 194-01 10073              Introduction to Asian American Studies M W F\n3 AMST 194-F1 10072 What’s After White Empire - And Is It Already Here?  T R \n4 AMST 203-01 10646 Politics and Inequality: The American Welfare State M W F\n5 AMST 205-01 10842                         Trans Theories and Politics  T R \n6 AMST 209-01 10474                   Civil Rights in the United States   W  \n             time      room             instructor avail_max\n1 9:40 - 10:40 am  MAIN 009       Daylanne English    3 / 20\n2  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa   -4 / 16\n3  3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan    0 / 14\n4 9:40 - 10:40 am  CARN 305          Lesley Lavery    3 / 25\n5  3:00 - 4:30 pm  MAIN 009              Myrl Beam   -2 / 20\n6 7:00 - 10:00 pm  MAIN 010         Walter Greason   -1 / 15\n\n\nUse our more familiar wrangling tools to warm up.\n\nCode# Construct a table that indicates the number of classes offered in each day/time slot\n# Print only the 6 most popular time slots\n\ncourses |&gt;  \n  count(days, time) |&gt;  \n  arrange(desc(n)) |&gt; \n  head()\n\n   days             time  n\n1 M W F 10:50 - 11:50 am 76\n2  T R   9:40 - 11:10 am 71\n3 M W F  9:40 - 10:40 am 68\n4 M W F   1:10 - 2:10 pm 66\n5  T R    3:00 - 4:30 pm 62\n6  T R    1:20 - 2:50 pm 59\n\n\nExercise 2: Prep the data\nSo that we can analyze it later, we want to wrangle the courses data:\n\nLet’s get some enrollment info:\n\nSplit avail_max into 2 separate variables: avail and max.\nUse avail and max to define a new variable called enroll. HINT: You’ll need as.numeric()\n\n\n\nSplit the course number into 3 separate variables: dept, number, and section. HINT: You can use separate() to split a variable into 3, not just 2 new variables.\n\nStore this as courses_clean so that you can use it later.\n\nCodecourses_clean &lt;- courses |&gt; \n  separate(avail_max, c(\"avail\", \"max\"), sep = \"/\") |&gt; \n  mutate(enroll = (as.numeric(max))-(as.numeric(avail))) |&gt; \n  separate(number, c('dept', 'number'), sep = \" \") |&gt; \n  separate(number, c('number', 'section'), sep = \"-\")\n\n\nExercise 3: Courses by department\nUsing courses_clean…\n\nCode# Identify the 6 departments that offered the most sections\ncourses_clean |&gt; \n  count(dept) |&gt; \n  arrange(desc(n)) |&gt; \n  head()\n\n  dept  n\n1 SPAN 45\n2 BIOL 44\n3 ENVI 38\n4 PSYC 37\n5 CHEM 33\n6 COMP 31\n\nCode# Identify the 6 departments with the longest average course titles\ncourses_clean |&gt; \n  mutate(title = str_length(name)) |&gt; \n  group_by(dept) |&gt; \n  summarise(total = sum(title)) |&gt; \n  arrange(desc(total)) |&gt; \n  head()\n\n# A tibble: 6 × 2\n  dept  total\n  &lt;chr&gt; &lt;int&gt;\n1 SPAN   1365\n2 ENVI   1136\n3 ENGL   1072\n4 POLI   1010\n5 PSYC   1003\n6 BIOL    983\n\n\nExercise 4: STAT courses\nPart a\nGet a subset of courses_clean that only includes courses taught by Alicia Johnson.\n\nCodecourses_clean |&gt; \n  filter(instructor == \"Alicia Johnson\")\n\n  dept number section   crn                         name  days            time\n1 STAT    253      01 10806 Statistical Machine Learning  T R  9:40 - 11:10 am\n2 STAT    253      02 10807 Statistical Machine Learning  T R   1:20 - 2:50 pm\n3 STAT    253      03 10808 Statistical Machine Learning  T R   3:00 - 4:30 pm\n        room     instructor avail max enroll\n1 THEATR 206 Alicia Johnson   -3   20     23\n2 THEATR 206 Alicia Johnson   -3   20     23\n3 THEATR 206 Alicia Johnson    2   20     18\n\n\nPart b\nCreate a new dataset from courses_clean, named stat, that only includes STAT sections. In this dataset:\n\n\nIn the course names:\n\nRemove “Introduction to” from any name.\nShorten “Statistical” to “Stat” where relevant.\n\n\nDefine a variable that records the start_time for the course.\nKeep only the number, name, start_time, enroll columns.\nThe result should have 19 rows and 4 columns.\n\n\nCodestat &lt;- courses_clean |&gt; \n  filter(dept == \"STAT\") |&gt; \n  mutate(name = str_replace(name, \"Introduction to \", \"\")) |&gt;\n  mutate(name = str_replace(name, \"Statistical\", \"Stat\")) |&gt; \n  mutate(start_time = str_sub(time, 1, 5)) |&gt; \n  select(number, name, start_time, enroll)\n\ndim(stat)\n\n[1] 19  4\n\n\nExercise 5: More cleaning\nIn the next exercises, we’ll dig into enrollments. Let’s get the data ready for that analysis here. Make the following changes to the courses_clean data. Because they have different enrollment structures, and we don’t want to compare apples and oranges, remove the following:\n\nall sections in PE and INTD (interdisciplinary studies courses)\nall music ensembles and dance practicums, i.e. all MUSI and THDA classes with numbers less than 100. HINT: !(dept == \"MUSI\" & as.numeric(number) &lt; 100)\nall lab sections. Be careful which variable you use here. For example, you don’t want to search by “Lab” and accidentally eliminate courses with words such as “Labor”.\n\nSave the results as enrollments (don’t overwrite courses_clean).\nExercise 6: Enrollment & departments\nExplore enrollments by department. You decide what research questions to focus on. Use both visual and numerical summaries.\nExercise 7: Enrollment & faculty\nLet’s now explore enrollments by instructor. In doing so, we have to be cautious of cross-listed courses that are listed under multiple different departments. Uncomment the code lines in the chunk below for an example.\n\n\n\n\n\n\nCommenting/Uncommenting Code\n\n\n\nTo comment/uncomment several lines of code at once, highlight them then click ctrl/cmd+shift+c.\n\n\n\nCode# enrollments |&gt;\n#   filter(dept %in% c(\"STAT\", \"COMP\"), number == 112, section == \"01\")\n\n\nNotice that these are the exact same section! In order to not double count an instructor’s enrollments, we can keep only the courses that have distinct() combinations of days, time, instructor values. Uncomment the code lines in the chunk below.\n\nCode# enrollments_2 &lt;- enrollments |&gt; \n#   distinct(days, time, instructor, .keep_all = TRUE)\n\n# NOTE: By default this keeps the first department alphabetically\n# That's fine because we won't use this to analyze department enrollments!\n# enrollments_2 |&gt; \n#   filter(instructor == \"Brianna Heggeseth\", name == \"Introduction to Data Science\")\n\n\nNow, explore enrollments by instructor. You decide what research questions to focus on. Use both visual and numerical summaries.\nCAVEAT: The above code doesn’t deal with co-taught courses that have more than one instructor. Thus instructors that co-taught are recorded as a pair, and their co-taught enrollments aren’t added to their total enrollments. This is tough to get around with how the data were scraped as the instructor names are smushed together, not separated by a comma!\nOptional extra practice\n\nCode# Make a bar plot showing the number of night courses by day of the week\n# Use courses_clean\n\n\nDig Deeper: regex\nExample 4 gave 1 small example of a regular expression.\nThese are handy when we want process a string variable, but there’s no consistent pattern by which to do this. You must think about the structure of the string and how you can use regular expressions to capture the patterns you want (and exclude the patterns you don’t want).\nFor example, how would you describe the pattern of a 10-digit phone number? Limit yourself to just a US phone number for now.\n\nThe first 3 digits are the area code.\nThe next 3 digits are the exchange code.\nThe last 4 digits are the subscriber number.\n\nThus, a regular expression for a US phone number could be:\n\n\n[:digit:]{3}-[:digit:]{3}-[:digit:]{4} which limits you to XXX-XXX-XXXX pattern or\n\n\\\\([:digit:]{3}\\\\) [:digit:]{3}-[:digit:]{4} which limits you to (XXX) XXX-XXXX pattern or\n\n[:digit:]{3}\\\\.[:digit:]{3}\\\\.[:digit:]{4} which limits you to XXX.XXX.XXXX pattern\n\nThe following would include the three patterns above in addition to the XXXXXXXXXX pattern (no dashes or periods): - [\\\\(]*[:digit:]{3}[-.\\\\)]*[:digit:]{3}[-.]*[:digit:]{4}\nIn order to write a regular expression, you first need to consider what patterns you want to include and exclude.\nWork through the following examples, and the tutorial after them to learn about the syntax.\nEXAMPLES\n\nCode# Define some strings to play around with\nexample &lt;- \"The quick brown fox jumps over the lazy dog.\"\n\n\n\nCodestr_replace(example, \"quick\", \"really quick\")\n\n[1] \"The really quick brown fox jumps over the lazy dog.\"\n\n\n\nCodestr_replace_all(example, \"(fox|dog)\", \"****\") # | reads as OR\n\n[1] \"The quick brown **** jumps over the lazy ****.\"\n\n\n\nCodestr_replace_all(example, \"(fox|dog).\", \"****\") # \".\" for any character\n\n[1] \"The quick brown ****jumps over the lazy ****\"\n\n\n\nCodestr_replace_all(example, \"(fox|dog)\\\\.$\", \"****\") # at end of sentence only, \"\\\\.\" only for a period\n\n[1] \"The quick brown fox jumps over the lazy ****\"\n\n\n\nCodestr_replace_all(example, \"the\", \"a\") # case-sensitive only matches one\n\n[1] \"The quick brown fox jumps over a lazy dog.\"\n\n\n\nCodestr_replace_all(example, \"[Tt]he\", \"a\") # # will match either t or T; could also make \"a\" conditional on capitalization of t\n\n[1] \"a quick brown fox jumps over a lazy dog.\"\n\n\n\nCodestr_replace_all(example, \"[Tt]he\", \"a\") # first match only\n\n[1] \"a quick brown fox jumps over a lazy dog.\"\n\n\n\nCode# More examples\nexample2 &lt;- \"Two roads diverged in a yellow wood, / And sorry I could not travel both / And be one traveler, long I stood / And looked down one as far as I could\"\nexample3 &lt;- \"This is a test\"\n\n# Store the examples in 1 place\nexamples &lt;- c(example, example2, example3)\n\n\n\nCodepat &lt;- \"[^aeiouAEIOU ]{3}\" # Regular expression for three straight consonants. Note that I've excluded spaces as well\n\nstr_detect(examples, pat) # TRUE/FALSE if it detects pattern\n\n[1]  TRUE  TRUE FALSE\n\n\n\nCodestr_subset(examples, pat) # Pulls out those that detects pattern\n\n[1] \"The quick brown fox jumps over the lazy dog.\"                                                                                                        \n[2] \"Two roads diverged in a yellow wood, / And sorry I could not travel both / And be one traveler, long I stood / And looked down one as far as I could\"\n\n\n\nCodepat2 &lt;- \"[^aeiouAEIOU ][aeiouAEIOU]{2}[^aeiouAEIOU ]{1}\" # consonant followed by two vowels followed by a consonant\n\nstr_extract(example2, pat2) # extract first match\n\n[1] \"road\"\n\n\n\nCodestr_extract_all(example2, pat2, simplify = TRUE) # extract all matches\n\n     [,1]   [,2]   [,3]   [,4]   [,5]   [,6]  \n[1,] \"road\" \"wood\" \"coul\" \"tood\" \"look\" \"coul\"",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>strings</span>"
    ]
  }
]